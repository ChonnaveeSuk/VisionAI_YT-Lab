import os
import sys
import logging
import torch

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Debug Logging
logging.basicConfig(level=logging.DEBUG)

# ‚úÖ ‡πÉ‡∏ä‡πâ Path ‡πÄ‡∏ï‡πá‡∏° ‡πÅ‡∏ó‡∏ô `os.path.join`
SRC_DIR = "C:/Vision_AI_YT/src"
if SRC_DIR not in sys.path:
    sys.path.append(SRC_DIR)

# ‚úÖ Debug ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Python ‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô `src/` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
print(f"‚úÖ Debug: SRC_DIR = {SRC_DIR}")
print(f"‚úÖ Debug: Current sys.path = {sys.path}")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ CPU ‡∏´‡∏£‡∏∑‡∏≠ GPU
if torch.cuda.is_available():
    DEVICE = torch.device("cuda")
    print(f"‚úÖ Debug: ‡πÉ‡∏ä‡πâ GPU {torch.cuda.get_device_name(0)}")
else:
    DEVICE = torch.device("cpu")
    print("‚ö†Ô∏è Debug: ‡πÑ‡∏°‡πà‡∏û‡∏ö GPU, ‡πÉ‡∏ä‡πâ CPU ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

# ‚úÖ ‡∏õ‡∏¥‡∏î TensorFlow Delegate ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
os.environ["TF_ENABLE_ONEDNN_OPTS"] = "0"
os.environ["TF_CPP_MIN_LOG_LEVEL"] = "3"  # ‡∏•‡∏î Logging ‡∏Ç‡∏≠‡∏á TensorFlow

# ‚úÖ Import ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å
try:
    print("üöÄ Debug: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• Object Detection...")
    from object_detection import recognize_objects
    print("‚úÖ Debug: ‡πÇ‡∏´‡∏•‡∏î Object Detection ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    print("üöÄ Debug: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• Emotion Recognition...")
    from emotion_recognition import recognize_emotions
    print("‚úÖ Debug: ‡πÇ‡∏´‡∏•‡∏î Emotion Recognition ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
except ModuleNotFoundError as e:
    print(f"‚ùå ERROR: {e}")
    print("üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå `object_detection.py` ‡πÅ‡∏•‡∏∞ `emotion_recognition.py` ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô `C:/Vision_AI_YT/src/` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    sys.exit(1)

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
def main():
    while True:
        print("\nüé¨ VisionAI_YT-Lab - Main Script üé¨")
        print("1Ô∏è‚É£ Emotion Recognition (Webcam)")
        print("2Ô∏è‚É£ Emotion Recognition (YouTube)")
        print("3Ô∏è‚É£ Object Detection (Webcam)")
        print("4Ô∏è‚É£ Object Detection (YouTube)")
        print("5Ô∏è‚É£ Exit")

        choice = input("\nüîπ Select an option (1-5): ").strip()

        if choice == "1":
            print("üé≠ Starting Emotion Recognition (Webcam)...")
            recognize_emotions(source="webcam", save_video=True)

        elif choice == "2":
            youtube_url = input("üìπ Enter YouTube URL: ").strip()
            print(f"üé≠ Processing YouTube Video: {youtube_url}")
            recognize_emotions(source="youtube", youtube_url=youtube_url, save_video=True)

        elif choice == "3":
            print("üîç Starting Object Detection (Webcam)...")
            recognize_objects(source="webcam", save_video=True)

        elif choice == "4":
            youtube_url = input("üìπ Enter YouTube URL: ").strip()
            print(f"üîç Processing YouTube Video: {youtube_url}")
            recognize_objects(source="youtube", youtube_url=youtube_url, save_video=True)

        elif choice == "5":
            print("üëã Exiting...")
            sys.exit(0)

        else:
            print("‚ùå Invalid Option! Please try again.")

if __name__ == "__main__":
    main()
