import telebot
import os
import sys
import logging
from dotenv import load_dotenv

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Debug Logging
logging.basicConfig(level=logging.DEBUG)

# ‚úÖ ‡πÉ‡∏ä‡πâ Path ‡πÄ‡∏ï‡πá‡∏° ‡πÅ‡∏ó‡∏ô `os.path.join`
SRC_DIR = "C:/Vision_AI_YT/src"
if SRC_DIR not in sys.path:
    sys.path.append(SRC_DIR)

# ‚úÖ Debug ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Python ‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô `src/` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
print(f"‚úÖ Debug: SRC_DIR = {SRC_DIR}")
print(f"‚úÖ Debug: Current sys.path = {sys.path}")

# ‚úÖ Import ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏° Path ‡πÅ‡∏•‡πâ‡∏ß (‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ImportError)
try:
    from object_detection import recognize_objects
    from emotion_recognition import recognize_emotions
    from youtube_downloader import get_video_info, download_youtube_video
except ModuleNotFoundError as e:
    print(f"‚ùå ERROR: {e}")
    print("üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå `object_detection.py` ‡πÅ‡∏•‡∏∞ `emotion_recognition.py` ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô `C:/Vision_AI_YT/src/` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    sys.exit(1)

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ TOKEN ‡∏à‡∏≤‡∏Å .env
load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Token ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
if not TELEGRAM_BOT_TOKEN or ":" not in TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .env")

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö Task ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (emotion ‡∏´‡∏£‡∏∑‡∏≠ object)
selected_task = {}

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "üëã Welcome to VisionAI_YT-Lab!\n"
                          "Select a task:\n"
                          "/emotion - Emotion Recognition and Full-Body Landmark Detection\n"
                          "/object - Object Detection (YOLOv8)")

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Emotion Recognition
@bot.message_handler(commands=['emotion'])
def handle_emotion(message):
    selected_task[message.chat.id] = "emotion"
    bot.reply_to(message, "üé≠ Select Input Source:\n"
                          "/webcam - Webcam (Real-time Detection)\n"
                          "/youtube - YouTube Video")

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Object Detection
@bot.message_handler(commands=['object'])
def handle_object(message):
    selected_task[message.chat.id] = "object"
    bot.reply_to(message, "üîç Select Input Source:\n"
                          "/webcam - Webcam (Real-time Detection)\n"
                          "/youtube - YouTube Video")

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏à‡∏≤‡∏Å Webcam
@bot.message_handler(commands=['webcam'])
def handle_webcam(message):
    if selected_task.get(message.chat.id) == "emotion":
        bot.reply_to(message, "üé≠ Initializing Emotion Recognition with Webcam...")
        recognize_emotions(source="webcam", save_video=True, chat_id=message.chat.id)
    elif selected_task.get(message.chat.id) == "object":
        bot.reply_to(message, "üîç Initializing Object Detection with Webcam...")
        recognize_objects(source="webcam", save_video=True, chat_id=message.chat.id)
    else:
        bot.reply_to(message, "‚ùå ERROR: Please select /emotion or /object first!")

# ‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏à‡∏≤‡∏Å YouTube
@bot.message_handler(commands=['youtube'])
def handle_youtube(message):
    bot.reply_to(message, "üìπ Please send the YouTube link:")
    bot.register_next_step_handler(message, process_youtube_link)

def process_youtube_link(message):
    youtube_link = message.text.strip()
    if youtube_link.startswith("https://www.youtube.com/") or youtube_link.startswith("https://youtu.be/"):
        bot.send_message(message.chat.id, f"‚è≥ Processing YouTube Video:\n{youtube_link}")

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å /emotion ‡∏´‡∏£‡∏∑‡∏≠ /object ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        if selected_task.get(message.chat.id) == "emotion":
            recognize_emotions(source="youtube", youtube_url=youtube_link, save_video=True, chat_id=message.chat.id)
        elif selected_task.get(message.chat.id) == "object":
            recognize_objects(source="youtube", youtube_url=youtube_link, save_video=True, chat_id=message.chat.id)
        else:
            bot.send_message(message.chat.id, "‚ùå ERROR: Please select /emotion or /object first!")
    else:
        bot.send_message(message.chat.id, "‚ùå Please send a valid YouTube link!")

# ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Bot
bot.polling(none_stop=True)
